<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.joblessfriend.jobfinder.resume.dao.ResumeDao">

	<resultMap type="com.joblessfriend.jobfinder.resume.domain.ResumeVo" id="ResumeResultMap">
		<id column="RESUME_ID" property="resumeId" />
		<result column="RESUME_TITLE" property="title" />
		<result column="NAME" property="memberName" />
		<result column="BIRTHDATE" property="birthDate" />
		<result column="PHONENUMBER" property="phoneNumber" />
        <result column="RESUME_TITLE" property="title" />
		<result column="EMAIL" property="email" />
		<result column="POSTAL_CODE_ID" property="postalCodeId" />
		<result column="ADDRESS" property="address" />
		<result column="SELF_INTRODUCTION" property="selfIntroduction" />
		<result column="MEMBER_ID" property="memberId" />
		<result column="PROFILE" property="profile" />
		<result column="CREATE_AT" property="createDate" javaType="java.util.Date" />
		<result column="MODIFIED_AT" property="modifyDate" javaType="java.util.Date" />
	<!-- 	<result column="JOB_GROUP_ID" property="jobGroupId" />
		<result column="JOB_ID" property="jobId" /> -->
	</resultMap>
	
	<!-- 조회 -->
	<select id="findResumesByMemberId" resultMap="ResumeResultMap">
        SELECT RESUME_ID, RESUME_TITLE, NAME, BIRTHDATE, PHONENUMBER, EMAIL, POSTAL_CODE_ID, ADDRESS, 
               SELF_INTRODUCTION, MEMBER_ID, PROFILE, CREATE_AT, MODIFIED_AT    

        FROM RESUME
        WHERE MEMBER_ID = #{memberId}
        ORDER BY RESUME_ID DESC
	</select>

	<select id="getResumeByResumeId" resultMap="ResumeResultMap">
        SELECT RESUME_ID, RESUME_TITLE, NAME, BIRTHDATE, PHONENUMBER, EMAIL, POSTAL_CODE_ID, ADDRESS, 
               SELF_INTRODUCTION, MEMBER_ID, PROFILE, CREATE_AT, MODIFIED_AT    
        FROM RESUME
        WHERE RESUME_ID = #{resumeId}
    </select>

	<!-- 삭제 -->
    <delete id="deleteResumeById">
        DELETE FROM RESUME 
        WHERE RESUME_ID = #{resumeId}
        AND MEMBER_ID = #{memberId}
    </delete>
    
    <!-- 이력서 사진 업데이트 -->
    <update id="updateProfileImage">
        UPDATE RESUME
        SET PROFILE = #{imageUrl}, MODIFIED_AT = SYSDATE
        WHERE RESUME_ID = #{resumeId}
          AND MEMBER_ID = #{memberId}
    </update>
    
    <!-- 이력서 저장 -->
    <insert id="insertResume" parameterType="com.joblessfriend.jobfinder.resume.domain.ResumeVo">
        <selectKey keyProperty="resumeId" resultType="int" order="BEFORE">
            SELECT RESUME_ID_SEQ.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO RESUME (
            RESUME_TITLE,RESUME_ID, MEMBER_ID, NAME, BIRTHDATE, PHONENUMBER, EMAIL,
            POSTAL_CODE_ID, ADDRESS, SELF_INTRODUCTION, PROFILE,
             CREATE_AT, MODIFIED_AT
        )
        VALUES (
        	#{title},
            #{resumeId},
            #{memberId, jdbcType=INTEGER},
            #{memberName, jdbcType=VARCHAR},
            #{birthDate, jdbcType=DATE},
            #{phoneNumber, jdbcType=VARCHAR},
            #{email, jdbcType=VARCHAR},
            #{postalCodeId, jdbcType=INTEGER},
            #{address, jdbcType=VARCHAR},
            #{selfIntroduction, jdbcType=VARCHAR},
            #{profile, jdbcType=VARCHAR},
            SYSDATE, SYSDATE
        )
    </insert>
    
    <!-- 학력정보 저장 -->
    <insert id="insertSchool" parameterType="com.joblessfriend.jobfinder.resume.domain.SchoolVo">
    INSERT INTO SCHOOL (
        SCHOOL_ID, RESUME_ID, SORTATION, SCHOOL_NAME, 
        YEAR_OF_GRADUATION, STATUS, MAJOR_NAME, START_DATE, END_DATE
    )
    VALUES (
        SCHOOL_ID_SEQ.NEXTVAL,
        #{resumeId},
        #{sortation},
        #{schoolName},
        <choose>
            <when test="yearOfGraduation != null and yearOfGraduation != ''">
                #{yearOfGraduation}
            </when>
            <otherwise>
                NULL
            </otherwise>
        </choose>,
        #{status},
        #{majorName, jdbcType=VARCHAR},
        <choose>
            <when test="startDate != null">
                #{startDate, jdbcType=DATE}
            </when>
            <otherwise>
                NULL
            </otherwise>
        </choose>,
        <choose>
            <when test="endDate != null">
                #{endDate, jdbcType=DATE}
            </when>
            <otherwise>
                NULL
            </otherwise>
        </choose>
    )
</insert>

    
    <!-- 교육정보 저장 -->
    <insert id="insertEducation" parameterType="com.joblessfriend.jobfinder.resume.domain.EducationVo">
        INSERT INTO EDUCATION (
            EDU_ID, RESUME_ID, EDU_INSTITUTION, EDU_NAME, START_DATE, END_DATE, CONTENT
        )
        VALUES (
            EDU_ID_SEQ.NEXTVAL, #{resumeId}, #{eduInstitution}, #{eduName}, 
            #{startDate, jdbcType=DATE}, #{endDate, jdbcType=DATE}, #{content, jdbcType=VARCHAR}
        )
    </insert>
    
    <!-- 경력정보 저장 -->
    <insert id="insertCareer" parameterType="com.joblessfriend.jobfinder.resume.domain.CareerVo">
        INSERT INTO CAREER (
            CAREER_ID, RESUME_ID, COMPANY_NAME, DEPARTMENT_NAME, HIRE_YM, RESIGN_YM,
            POSITION, JOB_GROUP_ID, JOB_ID, DETAIL, SALARY
        )
        VALUES (
            CAREER_ID_SEQ.NEXTVAL, #{resumeId}, #{companyName}, #{departmentName}, 
            #{hireYm, jdbcType=DATE}, #{resignYm, jdbcType=DATE},
            #{position, jdbcType=VARCHAR}, #{jobGroupId}, 
            #{jobId}, #{workDescription, jdbcType=VARCHAR}, 
            #{salary, jdbcType=VARCHAR}
        )
    </insert>
    
    <!-- 스킬정보 저장 -->
    <insert id="insertResumeTag">
        INSERT INTO RESUME_TAG (
            RESUME_TAG_ID, RESUME_ID, TAG_ID, CREATE_AT, MODIFIED_AT
        )
        VALUES (
            RESUME_TAG_ID_SEQ.NEXTVAL, #{resumeId}, #{tagId}, SYSDATE, SYSDATE
        )
    </insert>
    
    <!-- 자격증정보 저장 -->
    <insert id="insertCertificateResume" parameterType="com.joblessfriend.jobfinder.resume.domain.CertificateResumeVo">
        INSERT INTO CERTIFICATE_RESUME (
            CERTIFICATE_RESUME_ID, RESUME_ID, CERTIFICATE_NAME, ACQUISITION_DATE, ISSUING_AUTHORITY
        )
        VALUES (
            CERTIFICATE_RESUME_ID_SEQ.NEXTVAL, #{resumeId}, #{certificateName}, #{acquisitionDate}, #{issuingAuthority}
        )
    </insert>    
    
    <!-- 포트폴리오정보 저장 -->
    <insert id="insertPortfolio" parameterType="com.joblessfriend.jobfinder.resume.domain.PortfolioVo">
        INSERT INTO PORTFOLIO (
            PORTFOLIO_ID, RESUME_ID, FILE_NAME, STORED_FILE_NAME, FILE_EXTENSION, CREATE_AT, MODIFIED_AT
        )
        VALUES (
            PORTFOLIO_ID_SEQ.NEXTVAL, #{resumeId}, #{fileName}, #{storedFileName}, 
            #{fileExtension}, SYSDATE, SYSDATE
        )
    </insert>
    
    <!-- 이력서 업데이트 -->
    <update id="updateResume" parameterType="com.joblessfriend.jobfinder.resume.domain.ResumeVo">
        UPDATE RESUME SET 
            RESUME_TITLE = #{title, jdbcType=VARCHAR},
            NAME = #{memberName, jdbcType=VARCHAR},
            BIRTHDATE = #{birthDate, jdbcType=DATE},
            PHONENUMBER = #{phoneNumber, jdbcType=VARCHAR},
            EMAIL = #{email, jdbcType=VARCHAR},
            POSTAL_CODE_ID = #{postalCodeId, jdbcType=INTEGER},
            ADDRESS = #{address, jdbcType=VARCHAR},
            SELF_INTRODUCTION = #{selfIntroduction, jdbcType=VARCHAR},
            PROFILE = #{profile, jdbcType=VARCHAR},
            MODIFIED_AT = SYSDATE
        WHERE RESUME_ID = #{resumeId}
          AND MEMBER_ID = #{memberId}
    </update>
    
    <!-- 학력 업데이트 -->
    <update id="updateSchool" parameterType="com.joblessfriend.jobfinder.resume.domain.SchoolVo">
        UPDATE SCHOOL SET 
            SORTATION = #{sortation},
            SCHOOL_NAME = #{schoolName},
            YEAR_OF_GRADUATION = #{yearOfGraduation, jdbcType=VARCHAR},
            STATUS = #{status},
            MAJOR_NAME = #{majorName, jdbcType=VARCHAR},
            START_DATE = #{startDate, jdbcType=DATE},
            END_DATE = #{endDate, jdbcType=DATE}
        WHERE SCHOOL_ID = #{schoolId}
          AND RESUME_ID = #{resumeId}
    </update>
    
    <!-- 경력 업데이트 -->
    <update id="updateCareer" parameterType="com.joblessfriend.jobfinder.resume.domain.CareerVo">
        UPDATE CAREER SET 
            COMPANY_NAME = #{companyName},
            DEPARTMENT_NAME = #{departmentName},
            HIRE_YM = #{hireYm, jdbcType=DATE},
            RESIGN_YM = #{resignYm, jdbcType=DATE},
            POSITION = #{position, jdbcType=VARCHAR},
            JOB_GROUP_ID = #{jobGroupId},
            JOB_ID = #{jobId},
            DETAIL = #{workDescription, jdbcType=VARCHAR},
            SALARY = #{salary, jdbcType=VARCHAR}
        WHERE CAREER_ID = #{careerId}
          AND RESUME_ID = #{resumeId}
    </update>
    
    <!-- 교육 업데이트 -->
    <update id="updateEducation" parameterType="com.joblessfriend.jobfinder.resume.domain.EducationVo">
        UPDATE EDUCATION SET 
            EDU_INSTITUTION = #{eduInstitution},
            EDU_NAME = #{eduName},
            START_DATE = #{startDate, jdbcType=DATE},
            END_DATE = #{endDate, jdbcType=DATE},
            CONTENT = #{content, jdbcType=VARCHAR}
        WHERE EDU_ID = #{eduId}
          AND RESUME_ID = #{resumeId}
    </update>
    
    <!-- 자격증 업데이트 -->
    <update id="updateCertificateResume" parameterType="com.joblessfriend.jobfinder.resume.domain.CertificateResumeVo">
        UPDATE CERTIFICATE_RESUME SET 
            CERTIFICATE_NAME = #{certificateName},
            ACQUISITION_DATE = #{acquisitionDate, jdbcType=DATE},
            ISSUING_AUTHORITY = #{issuingAuthority}
        WHERE CERTIFICATE_RESUME_ID = #{certificateResumeId}
          AND RESUME_ID = #{resumeId}
    </update>
    
    <!-- 포트폴리오 업데이트 -->
    <update id="updatePortfolio" parameterType="com.joblessfriend.jobfinder.resume.domain.PortfolioVo">
        UPDATE PORTFOLIO SET 
            FILE_NAME = #{fileName},
            STORED_FILE_NAME = #{storedFileName},
            FILE_EXTENSION = #{fileExtension},
            MODIFIED_AT = SYSDATE
        WHERE PORTFOLIO_ID = #{portfolioId}
          AND RESUME_ID = #{resumeId}
    </update>
    
    <!-- 하위 데이터 조회 쿼리들 -->
    <select id="getSchoolsByResumeId" resultType="com.joblessfriend.jobfinder.resume.domain.SchoolVo">
        SELECT SCHOOL_ID as schoolId, RESUME_ID as resumeId, SORTATION as sortation, 
               SCHOOL_NAME as schoolName, YEAR_OF_GRADUATION as yearOfGraduation, 
               STATUS as status, MAJOR_NAME as majorName, START_DATE as startDate, END_DATE as endDate
        FROM SCHOOL 
        WHERE RESUME_ID = #{resumeId}
        ORDER BY SCHOOL_ID
    </select>
    
    <select id="getCareersByResumeId" resultType="com.joblessfriend.jobfinder.resume.domain.CareerVo">
        SELECT CAREER_ID as careerId, RESUME_ID as resumeId, COMPANY_NAME as companyName, 
               DEPARTMENT_NAME as departmentName, HIRE_YM as hireYm, RESIGN_YM as resignYm,
               POSITION as position, JOB_GROUP_ID as jobGroupId, JOB_ID as jobId, 
               DETAIL as workDescription, SALARY as salary
        FROM CAREER 
        WHERE RESUME_ID = #{resumeId}
        ORDER BY CAREER_ID
    </select>
    
    <select id="getEducationsByResumeId" resultType="com.joblessfriend.jobfinder.resume.domain.EducationVo">
        SELECT EDU_ID as eduId, RESUME_ID as resumeId, EDU_INSTITUTION as eduInstitution, 
               EDU_NAME as eduName, START_DATE as startDate, END_DATE as endDate, CONTENT as content
        FROM EDUCATION 
        WHERE RESUME_ID = #{resumeId}
        ORDER BY EDU_ID
    </select>
    
    <select id="getPortfoliosByResumeId" resultType="com.joblessfriend.jobfinder.resume.domain.PortfolioVo">
        SELECT PORTFOLIO_ID as portfolioId, RESUME_ID as resumeId, FILE_NAME as fileName, 
               STORED_FILE_NAME as storedFileName, FILE_EXTENSION as fileExtension,
               CREATE_AT as createAt, MODIFIED_AT as modifiedAt
        FROM PORTFOLIO 
        WHERE RESUME_ID = #{resumeId}
        ORDER BY PORTFOLIO_ID
    </select>
    
    <select id="getCertificateByResumeId" resultType="com.joblessfriend.jobfinder.resume.domain.CertificateResumeVo">
        SELECT CERTIFICATE_RESUME_ID as certificateResumeId, RESUME_ID as resumeId, 
               CERTIFICATE_NAME as certificateName, ACQUISITION_DATE as acquisitionDate,
               ISSUING_AUTHORITY as issuingAuthority
        FROM CERTIFICATE_RESUME 
        WHERE RESUME_ID = #{resumeId}
        ORDER BY CERTIFICATE_RESUME_ID
    </select>
    
    <select id="getTagIdsByResumeId" resultType="com.joblessfriend.jobfinder.skill.domain.SkillVo">
        SELECT RT.TAG_ID as tagId , T.TAG_NAME as tagName
        FROM RESUME_TAG RT JOIN TAG T ON RT.TAG_ID = T.TAG_ID
        WHERE RT.RESUME_ID = #{resumeId}
        ORDER BY RT.RESUME_TAG_ID
    </select>
    
    <!-- 하위 데이터 삭제 쿼리들 -->
    <delete id="deleteSchoolsByResumeId">
        DELETE FROM SCHOOL WHERE RESUME_ID = #{resumeId}
    </delete>
    
    <delete id="deleteCareersByResumeId">
        DELETE FROM CAREER WHERE RESUME_ID = #{resumeId}
    </delete>
    
    <delete id="deleteEducationsByResumeId">
        DELETE FROM EDUCATION WHERE RESUME_ID = #{resumeId}
    </delete>
    
    <delete id="deleteCertificatesByResumeId">
        DELETE FROM CERTIFICATE_RESUME WHERE RESUME_ID = #{resumeId}
    </delete>
    
    <delete id="deleteTagsByResumeId">
        DELETE FROM RESUME_TAG WHERE RESUME_ID = #{resumeId}
    </delete>
    
    <delete id="deletePortfoliosByResumeId">
        DELETE FROM PORTFOLIO WHERE RESUME_ID = #{resumeId}
    </delete>
    
    <select id="selectCareerGradeScore" resultType="int" parameterType="int">
    	SELECT SCORE
		FROM CAREER_GRADE
		WHERE LOW_YEAR &lt;= #{careerJobYear}
		AND HIGH_YEAR > #{careerJobYear}
    </select>
    
</mapper>