<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

	<mapper namespace="com.joblessfriend.jobfinder.member.domain">
	
		<resultMap type="memberVo" id="memberResultMap">
			<id column="MEMBER_ID" property="memberId"/>
			<result column="EMAIL" property="email" />
			<result column="PASSWORD" property="password" />
			<result column="NICKNAME" property="nickname" />
			<result column="RESUME_MAX" property="resumeMax" />
			<result column="CREATE_AT" property="createAt" />
			<result column="MODIFIED_AT" property="modifiedAt" />
			<result column="PROVIDER" property="provider" />
		</resultMap>
		
		<select id="memberExist" parameterType="map"
		resultMap="memberResultMap">
			SELECT MEMBER_ID, EMAIL, PASSWORD, NICKNAME, RESUME_MAX, CREATE_AT, MODIFIED_AT, PROVIDER
			FROM MEMBER
			WHERE EMAIL = #{email, jdbcType=VARCHAR}
			AND PASSWORD = #{password, jdbcType=VARCHAR}
		</select>
		
		<insert id="memberInsertOne" parameterType="memberVo">
			INSERT INTO MEMBER
			(MEMBER_ID, EMAIL, PASSWORD, NICKNAME, RESUME_MAX, CREATE_AT, MODIFIED_AT, PROVIDER)
			VALUES(MEMBER_ID_SEQ.NEXTVAL, #{email}, #{password},#{nickname},5, SYSDATE, SYSDATE, 'normal')
		</insert>
		
		<select id="isNicknameExists"  parameterType="String" resultType="String">
			SELECT NICKNAME FROM MEMBER WHERE NICKNAME = #{nickname}
		</select>
		
		<select id="memberEmailExist" parameterType="String" resultMap="memberResultMap">
			SELECT MEMBER_ID, EMAIL, PASSWORD, NICKNAME, RESUME_MAX, CREATE_AT, MODIFIED_AT, PROVIDER
			FROM MEMBER WHERE EMAIL = #{email}
		</select>
		
		<select id="memberSelectList" resultMap="memberResultMap">
			SELECT * 
			    FROM (SELECT ROWNUM AS RN, INNERTABLE.*
			        FROM (SELECT MEMBER_ID, EMAIL, NICKNAME, RESUME_MAX, CREATE_AT, MODIFIED_AT, PROVIDER
			            FROM MEMBER
			            ORDER BY MEMBER_ID DESC) INNERTABLE
			    WHERE ROWNUM &lt;= (#{page} + 1) * 10)
			WHERE RN &gt; #{page} * 10
		</select>
		
		<select id="memberCount" resultType="int">
			SELECT COUNT(MEMBER_ID)
			FROM MEMBER
		</select>
		
		<select id="memberSelectListByKeyword" resultMap="memberResultMap">
			SELECT * 
			    FROM (SELECT ROWNUM AS RN, INNERTABLE.*
			        FROM (SELECT MEMBER_ID, EMAIL, NICKNAME, RESUME_MAX, CREATE_AT, MODIFIED_AT, PROVIDER
			            FROM MEMBER
			            WHERE UPPER(EMAIL) LIKE UPPER('%' || #{keyword} || '%')
			            OR UPPER(NICKNAME) LIKE UPPER('%' || #{keyword} || '%')
			            ORDER BY MEMBER_ID DESC) INNERTABLE
			    WHERE ROWNUM &lt;= (#{page} + 1) * 10)
			WHERE RN &gt; #{page} * 10
		</select>
		
		<select id="memberCountByKeyword" resultType="int">
			SELECT COUNT(*)
			FROM MEMBER
			WHERE UPPER(EMAIL) LIKE UPPER('%' || #{keyword} || '%')
      		OR UPPER(NICKNAME) LIKE UPPER('%' || #{keyword} || '%')
		</select>	
		
		<select id="memberSelectOne" resultMap="memberResultMap">
			SELECT *
			FROM MEMBER
			WHERE MEMBER_ID = #{memberId}
		</select>
		
		<update id="memberUpdateOne" parameterType="memberVo">
		    UPDATE MEMBER
		    <set>
		        <if test="email != null">EMAIL = #{email},</if>
		        <if test="password != null">PASSWORD = #{password},</if>
		        <if test="nickname != null">NICKNAME = #{nickname},</if>
		        <if test="resumeMax != null">RESUME_MAX = #{resumeMax},</if>
		        <if test="provider != null">PROVIDER = #{provider},</if>
		 		MODIFIED_AT = SYSDATE
		    </set>
		    WHERE MEMBER_ID = #{memberId}
		</update>
		
		<delete id="memberDeleteOne">
			DELETE MEMBER
			WHERE MEMBER_ID = #{memberId}
		</delete>
		
		<delete id="memberDeleteList" parameterType="java.util.List">
		    DELETE FROM MEMBER
		    WHERE MEMBER_ID IN
		    <foreach item="memberId" collection="list" open="(" separator="," close=")">
		        #{memberId}
		    </foreach>
		</delete>
		
	</mapper>
	
	