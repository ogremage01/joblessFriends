SET DEFINE OFF;

--chat_message
DROP TABLE chat_message CASCADE CONSTRAINTS;
CREATE TABLE chat_message (
    id NUMBER PRIMARY KEY,
    room_id VARCHAR2(255) NOT NULL,
    sender VARCHAR2(255) NOT NULL,
    message VARCHAR2(4000) NOT NULL,
    send_time TIMESTAMP NOT NULL
);




-- job_group
DROP TABLE JOB_GROUP CASCADE CONSTRAINTS;
CREATE TABLE JOB_GROUP (
    JOB_GROUP_ID NUMBER(5),
    JOB_GROUP_NAME VARCHAR2(300),
    CONSTRAINT PK_JOB_GROUP PRIMARY KEY (JOB_GROUP_ID)
);

-- job
DROP TABLE JOB CASCADE CONSTRAINTS;
CREATE TABLE JOB (
    JOB_ID NUMBER(5),
    JOB_GROUP_ID NUMBER(5),
    JOB_NAME VARCHAR2(3000),
    CONSTRAINT PK_JOB PRIMARY KEY (JOB_ID),
    CONSTRAINT FK_JOB_GROUP_TO_JOB FOREIGN KEY (JOB_GROUP_ID) REFERENCES JOB_GROUP (JOB_GROUP_ID) ON DELETE CASCADE
);

-- Certificate (자격증) api 쓸 예정
DROP TABLE CERTIFICATE CASCADE CONSTRAINTS;
CREATE TABLE CERTIFICATE (
    CERTIFICATE_ID NUMBER(5),
    CERTIFICATE_NAME VARCHAR2(3000),
    ISSUING_AUTHORITY VARCHAR2(3000),
    IS_ACTIVE NUMBER(1) NULL,
    CONSTRAINT PK_CERTIFICATE PRIMARY KEY (CERTIFICATE_ID)
);

-- Tag
DROP TABLE TAG CASCADE CONSTRAINTS;
CREATE TABLE TAG (
    TAG_ID NUMBER(5),
    TAG_NAME VARCHAR2(3000),
    CREATE_AT DATE,
    MODIFIED_AT DATE,
    JOB_GROUP_ID NUMBER(3),
    CONSTRAINT PK_TAG PRIMARY KEY (TAG_ID),
    CONSTRAINT FK_JOB_GROUP_TO_TAG FOREIGN KEY (JOB_GROUP_ID) REFERENCES JOB_GROUP (JOB_GROUP_ID) ON DELETE CASCADE
);

--복지
DROP TABLE JOB_POST_WELFARE CASCADE CONSTRAINTS;
CREATE TABLE JOB_POST_WELFARE (
    JOB_WELFARE_ID NUMBER PRIMARY KEY,
    JOB_POST_ID NUMBER NOT NULL,
    BENEFIT_TEXT VARCHAR2(500) NOT NULL,
    CONSTRAINT FK_JOB_POST_WELFARE_JOB_POST
    FOREIGN KEY (JOB_POST_ID) REFERENCES JOB_POST(JOB_POST_ID) ON DELETE CASCADE
);

-- state
DROP TABLE STATE CASCADE CONSTRAINTS;
CREATE TABLE STATE (
    STATE_ID NUMBER(1),
    STATE_NAME VARCHAR2(3000),
    CONSTRAINT PK_STATE PRIMARY KEY (STATE_ID)
);

-- MEMBER
DROP TABLE MEMBER CASCADE CONSTRAINTS;
CREATE TABLE MEMBER (
    MEMBER_ID NUMBER(5),
    EMAIL VARCHAR2(3000),
    PASSWORD VARCHAR2(3000),
    NICKNAME VARCHAR2(3000),
    RESUME_MAX NUMBER(2),
    CREATE_AT DATE,
    MODIFIED_AT DATE,
    PROVIDER VARCHAR2(3000) default 'normal',
    CONSTRAINT PK_MEMBER PRIMARY KEY (MEMBER_ID),
    CONSTRAINT UK_MEMBER_EMAIL UNIQUE (EMAIL)
);

-- Admin
DROP TABLE ADMIN CASCADE CONSTRAINTS;
CREATE TABLE ADMIN (
    ADMIN_ID VARCHAR2(3000),
    PASSWORD VARCHAR2(3000),
    CONSTRAINT PK_ADMIN PRIMARY KEY (ADMIN_ID)
);

-- COMPANY
DROP TABLE COMPANY CASCADE CONSTRAINTS;
CREATE TABLE COMPANY (
    COMPANY_ID NUMBER(5),
    EMAIL VARCHAR2(3000),
    PASSWORD VARCHAR2(3000),
    COMPANY_NAME VARCHAR2(3000),
    BRN VARCHAR2(3000),
    REPRESENTATIVE VARCHAR2(3000),
    TEL VARCHAR2(3000),
    POSTAL_CODE_ID NUMBER(5),
    ADDRESS VARCHAR2(3000),
    ARENA_NAME varchar2(3000),
    CONSTRAINT PK_COMPANY PRIMARY KEY (COMPANY_ID)
);

-- PROFILE_TEMP
DROP TABLE PROFILE_TEMP CASCADE CONSTRAINTS;
CREATE TABLE PROFILE_TEMP (
    UPLOAD_ID NUMBER(10) PRIMARY KEY,
    MEMBER_ID NUMBER(5),
    FILE_NAME VARCHAR2(3000),
    IS_USED NUMBER(1) DEFAULT 0,
    CREATE_AT DATE DEFAULT SYSDATE
);

-- Resume
DROP TABLE RESUME CASCADE CONSTRAINTS;
CREATE TABLE RESUME (
    RESUME_ID NUMBER(5),
    NAME VARCHAR2(3000),
    BIRTHDATE DATE,
    PHONENUMBER VARCHAR2(3000),
    EMAIL VARCHAR2(3000),
    POSTAL_CODE_ID NUMBER(5),
    ADDRESS VARCHAR2(3000),
    SELF_INTRODUCTION VARCHAR2(3000),
    MEMBER_ID NUMBER(5),
    PROFILE VARCHAR2(3000),
    CREATE_AT DATE,
    MODIFIED_AT DATE,
    CONSTRAINT PK_RESUME PRIMARY KEY (RESUME_ID),
    CONSTRAINT FK_MEMBER_TO_RESUME FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER(MEMBER_ID) ON DELETE CASCADE
);

-- Certificate_RESUME (이력서 자격증)
DROP TABLE CERTIFICATE_RESUME CASCADE CONSTRAINTS;
CREATE TABLE CERTIFICATE_RESUME (
	CERTIFICATE_RESUME_ID NUMBER(5),
    RESUME_ID        NUMBER(5),
    CERTIFICATE_ID   NUMBER(5),
    ACQUISITION_DATE DATE,
    CONSTRAINT PK_CERTIFICATE_RESUME_ID PRIMARY KEY (CERTIFICATE_RESUME_ID),
    CONSTRAINT FK_RESUME_TO_CERTIFICATE FOREIGN KEY (RESUME_ID) REFERENCES RESUME(RESUME_ID),
    CONSTRAINT FK_CERTIFICATE_TO_RESUME FOREIGN KEY (CERTIFICATE_ID) REFERENCES CERTIFICATE(CERTIFICATE_ID)
);

-- Career
DROP TABLE CAREER CASCADE CONSTRAINTS;
CREATE TABLE CAREER (
    CAREER_ID NUMBER(5),
    Resume_ID NUMBER(5),
    COMPANY_NAME VARCHAR2(3000),
    DEPARTMENT_NAME VARCHAR2(3000),
    HIRE_YM DATE,
    RESIGN_YM DATE,
    POSITION VARCHAR2(3000),
    JOB_TITLE VARCHAR2(3000),
    SALARY NUMBER(6),
    CONSTRAINT PK_CAREER PRIMARY KEY (CAREER_ID),
    CONSTRAINT FK_RESUME_TO_CAREER FOREIGN KEY (Resume_ID) REFERENCES RESUME(RESUME_ID) ON DELETE CASCADE
);

-- Education
DROP TABLE EDUCATION CASCADE CONSTRAINTS;
CREATE TABLE EDUCATION (
    EDU_ID NUMBER(5),
    Resume_ID NUMBER(5),
    EDU_INSTITUTION VARCHAR2(3000),
    EDU_NAME VARCHAR2(3000),
    START_DATE DATE,
    END_DATE DATE,
    CONTENT VARCHAR2(3000),
    CONSTRAINT PK_EDUCATION PRIMARY KEY (EDU_ID),
    CONSTRAINT FK_RESUME_TO_EDUCATION FOREIGN KEY (Resume_ID) REFERENCES RESUME(RESUME_ID) ON DELETE CASCADE
);

-- School
DROP TABLE SCHOOL CASCADE CONSTRAINTS;
CREATE TABLE SCHOOL (
    SCHOOL_ID NUMBER(5),
    Resume_ID NUMBER(5),
    SORTATION VARCHAR2(3000),
    SCHOOL_NAME VARCHAR2(3000),
    YEAR_OF_GRADUATION DATE,
    STATUS VARCHAR2(3000),
    CONSTRAINT PK_SCHOOL PRIMARY KEY (SCHOOL_ID),
    CONSTRAINT FK_RESUME_TO_SCHOOL FOREIGN KEY (Resume_ID) REFERENCES RESUME(RESUME_ID) ON DELETE CASCADE
);

-- Portfolio
DROP TABLE PORTFOLIO CASCADE CONSTRAINTS;
CREATE TABLE PORTFOLIO (
    PORTFOLIO_ID NUMBER(5),
    Resume_ID NUMBER(5),
    FILE_NAME VARCHAR2(3000),
    STORED_FILE_NAME VARCHAR2(3000),
    FILE_EXTENSION VARCHAR2(300),
    CREATE_AT DATE,
    MODIFIED_AT DATE,
    CONSTRAINT PK_PORTFOLIO PRIMARY KEY (PORTFOLIO_ID),
    CONSTRAINT FK_RESUME_TO_PORTFOLIO FOREIGN KEY (Resume_ID) REFERENCES RESUME(RESUME_ID) ON DELETE CASCADE
);


-- Job_Post
DROP TABLE JOB_POST CASCADE CONSTRAINTS;
CREATE TABLE JOB_POST (
        Job_Post_ID NUMBER(5),
        COMPANY_ID NUMBER(5) NOT NULL,
        Title VARCHAR2(3000) NOT NULL,
        Content CLOB NOT NULL,
        Salary VARCHAR2(4000),
        Work_Hours VARCHAR2(200),      --근무시간 ex:월~금
        Job_ID NUMBER(3),
        Job_Group_ID NUMBER(3),
        Views NUMBER(5),
        Job_Img VARCHAR2(3000),
        Career_Type VARCHAR2(200),
        Education VARCHAR2(200),
        template_type VARCHAR2(200),
        Start_Date DATE,
        End_Date DATE,
        Is_Continuous NUMBER(1) DEFAULT 0,         -- 상시채용 여부
        Max_Applicants NUMBER(5),                  -- 최대 지원자 수
        Current_Applicants NUMBER(5) DEFAULT 0,    -- 현재 지원자 수
        MODIFIED_DATE DATE,						   -- 최종 수정일
        CONSTRAINT PK_JOB_POST PRIMARY KEY (Job_Post_ID),
	    CONSTRAINT FK_COMPANY_TO_JOB_POST FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(COMPANY_ID) ON DELETE CASCADE,
	    CONSTRAINT FK_JOB_GROUP_TO_JOB_POST FOREIGN KEY (Job_Group_ID) REFERENCES JOB_GROUP(Job_Group_ID) ON DELETE CASCADE,
	    CONSTRAINT FK_JOB_TO_JOB_POST FOREIGN KEY (Job_ID) REFERENCES JOB(Job_ID) ON DELETE CASCADE
);

-- Job_Post_File
DROP TABLE JOB_POST_FILE CASCADE CONSTRAINTS;

CREATE TABLE JOB_POST_FILE (
    JOB_POST_FILE_ID NUMBER(5),
    JOB_POST_ID NUMBER(5),
    FILE_NAME VARCHAR2(3000),
    STORED_FILE_NAME VARCHAR2(3000),
    FILE_EXTENSION VARCHAR2(100),
    FILE_SIZE NUMBER(8),
    CREATE_AT DATE,
    MODIFIED_AT DATE,
    CONSTRAINT PK_JOB_POST_FILE PRIMARY KEY (JOB_POST_FILE_ID),
    CONSTRAINT FK_JOB_POST_TO_JOB_POST_FILE FOREIGN KEY (JOB_POST_ID) REFERENCES JOB_POST(JOB_POST_ID) ON DELETE CASCADE
);

-- Job_Post_Tag
DROP TABLE JOB_POST_TAG CASCADE CONSTRAINTS;
CREATE TABLE JOB_POST_TAG (
    JOB_POST NUMBER(5),
    TAG_ID NUMBER(5),
    REQUIRED NUMBER(1),
    CONSTRAINT FK_JOB_POST_TO_JOB_POST_TAG FOREIGN KEY (JOB_POST) REFERENCES JOB_POST(JOB_POST_ID) ON DELETE CASCADE,
    CONSTRAINT FK_TAG_TO_JOB_POST_TAG FOREIGN KEY (TAG_ID) REFERENCES TAG(TAG_ID) ON DELETE CASCADE
);

-- Resume_manage
DROP TABLE RESUME_MANAGE CASCADE CONSTRAINTS;
CREATE TABLE RESUME_MANAGE (
    RM_ID NUMBER(5),
    JOB_POST_ID NUMBER(5),
    MEMBER_ID NUMBER(5),
    RESUME_FILE VARCHAR2(3000),
    STATE_ID NUMBER(1),
    CONSTRAINT PK_RESUME_MANAGE PRIMARY KEY (RM_ID),
    CONSTRAINT FK_JOB_POST_TO_RESUME_MANAGE FOREIGN KEY (JOB_POST_ID) REFERENCES JOB_POST(JOB_POST_ID) ON DELETE CASCADE,
    CONSTRAINT FK_MEMBER_TO_RESUME_MANAGE FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER(MEMBER_ID) ON DELETE CASCADE,
    CONSTRAINT FK_STATE_TO_RESUME_MANAGE FOREIGN KEY (STATE_ID) REFERENCES STATE(STATE_ID)
);

-- Resume_Tag
DROP TABLE RESUME_TAG CASCADE CONSTRAINTS;
CREATE TABLE RESUME_TAG (
    RESUME_TAG_ID NUMBER(5),
    RESUME_ID NUMBER(5),
    TAG_ID NUMBER(5),
    CREATE_AT DATE,
    MODIFIED_AT DATE,
    CONSTRAINT FK_RESUME_TO_RESUME_TAG FOREIGN KEY (RESUME_ID) REFERENCES RESUME(RESUME_ID) ON DELETE CASCADE,
    CONSTRAINT FK_TAG_TO_RESUME_TAG FOREIGN KEY (TAG_ID) REFERENCES TAG(TAG_ID) ON DELETE CASCADE
);

-- BookMark
DROP TABLE BOOKMARK CASCADE CONSTRAINTS;
CREATE TABLE BOOKMARK (
    MEMBER_ID NUMBER(5),
    JOB_POST_ID NUMBER(5),
    CONSTRAINT PK_BOOKMARK PRIMARY KEY (MEMBER_ID, JOB_POST_ID),
    CONSTRAINT FK_MEMBER_TO_BOOKMARK FOREIGN KEY (MEMBER_ID)
        REFERENCES MEMBER(MEMBER_ID) ON DELETE CASCADE,
    CONSTRAINT FK_JOB_POST_TO_BOOKMARK FOREIGN KEY (JOB_POST_ID)
        REFERENCES JOB_POST(JOB_POST_ID) ON DELETE CASCADE
);

-- Community
DROP TABLE COMMUNITY CASCADE CONSTRAINTS;
CREATE TABLE COMMUNITY (
    COMMUNITY_ID NUMBER(5),
    MEMBER_ID NUMBER(5),
    TITLE VARCHAR2(3000),
    CONTENT VARCHAR2(3000),
    CREATE_AT DATE,
    MODIFIED_AT DATE,
    VIEWS NUMBER(5),
    CONSTRAINT PK_COMMUNITY PRIMARY KEY (COMMUNITY_ID),
    CONSTRAINT FK_MEMBER_TO_COMMUNITY FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER(MEMBER_ID) ON DELETE CASCADE
);

-- Community_File
DROP TABLE COMMUNITY_FILE CASCADE CONSTRAINTS;
CREATE TABLE COMMUNITY_FILE (
    COMMUNITY_FILE_ID NUMBER(5),
    COMMUNITY_ID NUMBER(5),
    FILE_NAME VARCHAR2(3000),
    STORED_FILE_NAME VARCHAR2(3000),
    FILE_SIZE NUMBER(8),
    CREATE_AT DATE,
    MODIFIED_AT DATE,
    FILE_EXTENSION VARCHAR2(300),
    FILE_LINK VARCHAR2(3000),
    CONSTRAINT PK_COMMUNITY_FILE PRIMARY KEY (COMMUNITY_FILE_ID),
    CONSTRAINT FK_COMMUNITY_TO_COMMUNITY_FILE FOREIGN KEY (COMMUNITY_ID) REFERENCES COMMUNITY(COMMUNITY_ID) ON DELETE CASCADE
);

-- Post_Comment
DROP TABLE POST_COMMENT CASCADE CONSTRAINTS;
CREATE TABLE POST_COMMENT (
    POST_COMMENT_ID NUMBER(5),
    COMMUNITY_ID NUMBER(5),
    MEMBER_ID NUMBER(5),
    CONTENT VARCHAR2(3000),
    CREATE_AT DATE,
    MODIFIED_AT DATE,
    CONSTRAINT PK_POST_COMMENT PRIMARY KEY (POST_COMMENT_ID),
    CONSTRAINT FK_COMMUNITY_TO_POST_COMMENT FOREIGN KEY (COMMUNITY_ID) REFERENCES COMMUNITY(COMMUNITY_ID) ON DELETE CASCADE,
    CONSTRAINT FK_MEMBER_TO_POST_COMMENT FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER(MEMBER_ID) ON DELETE CASCADE
);

-- Reply
DROP TABLE REPLY CASCADE CONSTRAINTS;
CREATE TABLE REPLY (
    REPLY_ID NUMBER(5),
    POST_COMMENT_ID NUMBER(5),
    MEMBER_ID NUMBER(5),
    COMMENT_CONTENT VARCHAR2(3000),
    CREATE_AT DATE,
    MODIFIED_AT DATE,
    CONSTRAINT PK_REPLY PRIMARY KEY (REPLY_ID),
    CONSTRAINT FK_POST_COMMENT_TO_REPLY FOREIGN KEY (POST_COMMENT_ID) REFERENCES POST_COMMENT(POST_COMMENT_ID) ON DELETE CASCADE,
    CONSTRAINT FK_MEMBER_TO_REPLY FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER(MEMBER_ID) ON DELETE CASCADE
);

-- ChatRoom
DROP TABLE CHATROOM CASCADE CONSTRAINTS;
CREATE TABLE CHATROOM (
    CR_ID NUMBER(5),
    MEMBER_ID NUMBER(5),
    ADMIN_ID VARCHAR2(3000),
    CREATE_AT DATE,
    CONSTRAINT PK_CHATROOM PRIMARY KEY (CR_ID),
    CONSTRAINT FK_MEMBER_TO_CHATROOM FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER(MEMBER_ID) ON DELETE CASCADE,
    CONSTRAINT FK_ADMIN_TO_CHATROOM FOREIGN KEY (ADMIN_ID) REFERENCES ADMIN(ADMIN_ID) ON DELETE CASCADE
);

-- ChatMessage
DROP TABLE CHATMESSAGE CASCADE CONSTRAINTS;
CREATE TABLE CHATMESSAGE (
    CM_ID NUMBER(5),
    CR_ID NUMBER(5),
    CONTENT VARCHAR2(3000),
    READ NUMBER(1),
    CREATE_AT DATE,
    MEMBER_ID NUMBER(5),
    ADMIN_ID VARCHAR2(3000),
    COMPANY_ID NUMBER(5),
    CONSTRAINT PK_CHATMESSAGE PRIMARY KEY (CM_ID),
    CONSTRAINT FK_CHATROOM_TO_CHATMESSAGE FOREIGN KEY (CR_ID) REFERENCES CHATROOM(CR_ID) ON DELETE CASCADE,
    CONSTRAINT FK_MEMBER_TO_CHATMESSAGE FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER(MEMBER_ID) ON DELETE CASCADE,
    CONSTRAINT FK_ADMIN_TO_CHATMESSAGE FOREIGN KEY (ADMIN_ID) REFERENCES ADMIN(ADMIN_ID) ON DELETE CASCADE,
    CONSTRAINT FK_COMPANY_TO_CHATMESSAGE FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(COMPANY_ID) ON DELETE CASCADE
);
